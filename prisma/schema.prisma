generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// üè∑Ô∏è Categories (Women, Men, Kids, Accessories, etc.)
model Category {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  slug        String    @unique
  description String?
  image       String?
  isActive    Boolean   @default(true)
  sortOrder   Int       @default(0)
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([isActive])
  @@index([sortOrder])
}

// üëï Products (Zara-style with all necessary fields)
model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  slug        String   @unique
  description String?
  
  // Pricing
  originalPrice Float
  currentPrice  Float
  currency      String   @default("USD")
  discountPercent Float?
  
  // Media
  mainImage   String
  images      String[]
  
  // Variants
  colors      String[]
  sizes       String[]
  
  // Inventory
  inStock     Boolean  @default(true)
  quantity    Int      @default(0)
  
  // Category relationship
  categoryId  String   @db.ObjectId 
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  
  // Marketing flags
  isNew       Boolean  @default(false)
  onSale      Boolean  @default(false)
  isFeatured  Boolean  @default(false)
  
  // SEO & Organization
  tags        String[]
  sku         String?  @unique
  
  // Timestamps
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([categoryId])
  @@index([isNew])
  @@index([onSale])
  @@index([isFeatured])
  @@index([inStock])
  @@index([currentPrice])
  @@index([createdAt])
}

// üìù Editorial content (Lookbooks, Style guides, etc.)
model Editorial {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String   @unique
  excerpt     String?
  content     String
  mainImage   String?
  images      String[]
  tags        String[]
  isPublished Boolean  @default(false)
  publishedAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([isPublished])
  @@index([publishedAt])
}